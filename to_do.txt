2. Mejorar el funcionamiento de " | " (deberiamos guardar que aparece por salida estandar para modificar luego)
5. Implementación de redirecciones. ("<", ">", ">>")
6.Comprobar/introducir el correcto funcionamiento de las variables de entorno
9. Mejoras si es posible en la estructura basica del codigo en caso de que la lógica general fallara
10. Empezar a solucionar leaks:  compilar con flag -fsanitize=address para anotar los leaks que puedan salir al desarrollar
11. $? funciona pero...¿igual deberia ir diferente?
12. Al salir escribiendo exit, nos muestra "Esto ha terminado con ctrl+c" 2 veces y se queda esperando un enter.
13. Implementar ;
14. Revisar implementación del fork. ¿Debería sólo utilizarse al lanzar los comandos que no son builtins?
15. ¿Textos en inglés?
16. Revisar el exit. Estamos enviando un kill pero podemos usar exit
17. Eliminar valid_str? Al final está hardcoded los códigos numerícos y reducen la legibilidad
18. Expandir ~ en el export. Por ejemplo: export HOME=~/42 en mi caso el ~ se tiene que expandir al valor actual de HOME que inicialmente es /home/visv
19. Tenemos que controlar que si pulsamos enter cuando están las comillas abiertas, nos siga pidiendo datos de entrada hasta llegar a las comillas?
20. Tratar la \ en el cd? En bash una barra invertida se interpreta como un salto de línea para concatenar líneas
21. Tratar los caracteres de borrado. Si escribimos un comando, borramos para corregir y reescribimos, ..., nosotros lo que ejecutaremos no es el resultado que ve el usuario por pantalla sino todo el comando entero escrito incluyendo los caracteres de borrado, ...
22. Tratar las comillas en los comandos?
23. Imprimir path en promp?
24. Ctrl + d ha dejado de funcionar. Seguramente esté ejecutando el exit dentro del fork y entonces mata al hijo y no al minishell