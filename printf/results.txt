WARNING: The return values reported here may be bugged on some systems.
          See https://github.com/gavinfielder/pft/issues/11
          Run in non-fork mode (-X) to ensure accurate return value
          reporting, set IGNORE_RETURN_VALUE=1 in options-config.ini,
          or run test_pipes.sh to see if your system has this bug.
          This bug does not affect the pass/fail result of a test, nor
          the function output--only the reported return value.


Test   0 (nospec_no_specifier_test) : FAILED.
    First line of code: {return test("hello, world!");}
      expected return value : 14
      your return value     : 0
      expected output : "hello, world!"
      your output     : "hello, world!"
      expected (nonprintable as hex) : "hello, world!"
      actual   (nonprintable as hex) : "hello, world!"

Test   2 (nospec_some_escaped_chars) : FAILED.
    First line of code: {return test("	

");}
      expected return value : 6
      your return value     : 0
      expected output : "	

"
      your output     : "	

"
      expected (nonprintable as hex) : "\x09\x0a\x0d\x0b\x0c\x0a"
      actual   (nonprintable as hex) : "\x09\x0a\x0d\x0b\x0c\x0a"

Test   3 (nospec_successive_5_5) : FAILED.
    First line of code: {return ( test("hello") + test("world"));}
      expected return value : 11
      your return value     : 0
      expected output : "helloworld"
      your output     : "helloworld"
      expected (nonprintable as hex) : "helloworld"
      actual   (nonprintable as hex) : "helloworld"

Test   4 (nospec_successive_2_9) : FAILED.
    First line of code: {return ( test("he") ^ test(" is alive"));}
      expected return value : 12
      your return value     : 0
      expected output : "he is alive"
      your output     : "he is alive"
      expected (nonprintable as hex) : "he is alive"
      actual   (nonprintable as hex) : "he is alive"

Test   5 (nospec_successive_8_3) : FAILED.
    First line of code: {return ( test("is alive") - test(" he"));}
      expected return value : 5
      your return value     : 0
      expected output : "is alive he"
      your output     : "is alive he"
      expected (nonprintable as hex) : "is alive he"
      actual   (nonprintable as hex) : "is alive he"

Test  10 (pct_5wljzp) : FAILED.
    First line of code: {return test("%-05%");}
      expected return value : 5
      your return value     : 5
      expected output : "%    "
      your output     : "0000%"
      expected (nonprintable as hex) : "%    "
      actual   (nonprintable as hex) : "0000%"

Test  61 (s_null_basic_string_expansion) : FAILED.
    First line of code: {return test("hello, %s.", NULL);}
    SEGFAULT

Test  62 (s_null_only_string_expansion) : FAILED.
    First line of code: {return test("%s", NULL);}
    SEGFAULT

Test  63 (s_null_space_padded_field_width) : FAILED.
    First line of code: {return test("%32s", NULL);}
    SEGFAULT

Test  64 (s_null_space_padded_over_field_width) : FAILED.
    First line of code: {return test("%2s", NULL);}
    SEGFAULT

Test  65 (s_null_space_padded_field_width_lj) : FAILED.
    First line of code: {return test("%-32s", NULL);}
    SEGFAULT

Test  66 (s_null_space_padded_field_width2_lj) : FAILED.
    First line of code: {return test("%-16s", NULL);}
    SEGFAULT

Test  67 (s_null_space_padded_over_field_width_lj) : FAILED.
    First line of code: {return test("%-3s", NULL);}
    SEGFAULT

Test  79 (s_prec_03_no_width_s_null) : FAILED.
    First line of code: {return test("%.03s", NULL);}
    SEGFAULT

Test  80 (s_prec_09_no_width_s_null) : FAILED.
    First line of code: {return test("%.09s", NULL);}
    SEGFAULT

Test  87 (s_prec_0_width_3_s_null) : FAILED.
    First line of code: {return test("%3.s", NULL);}
    SEGFAULT

Test  88 (s_prec_0_width_10_s_null) : FAILED.
    First line of code: {return test("%10.s", NULL);}
    SEGFAULT

Test  94 (s_prec_0_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.s", NULL);}
    SEGFAULT

Test  95 (s_prec_0_lj_width_8_s_null) : FAILED.
    First line of code: {return test("%-8.s", NULL);}
    SEGFAULT

Test 101 (s_prec_1_width_3_s_null) : FAILED.
    First line of code: {return test("%3.1s", NULL);}
    SEGFAULT

Test 102 (s_prec_1_width_9_s_null) : FAILED.
    First line of code: {return test("%9.1s", NULL);}
    SEGFAULT

Test 105 (s_prec_1_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.1s", NULL);}
    SEGFAULT

Test 106 (s_prec_1_lj_width_9_s_null) : FAILED.
    First line of code: {return test("%-9.1s", NULL);}
    SEGFAULT

Test 111 (s_prec_perfect_width_3_s_null) : FAILED.
    First line of code: {return test("%3.6s", NULL);}
    SEGFAULT

Test 112 (s_prec_perfect_width_20_s_null) : FAILED.
    First line of code: {return test("%20.6s", NULL);}
    SEGFAULT

Test 119 (s_prec_8_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.8s", NULL);}
    SEGFAULT

Test 120 (s_prec_8_lj_width_10_s_null) : FAILED.
    First line of code: {return test("%-10.8s", NULL);}
    SEGFAULT

Test 130 (s_undefbehav_0_width_9) : FAILED.
    First line of code: {return test("%09s", s_hidden);}
      expected return value : 9
      your return value     : 9
      expected output : "000hi low"
      your output     : "   hi low"
      expected (nonprintable as hex) : "000hi low"
      actual   (nonprintable as hex) : "   hi low"

Test 132 (s_undefbehav_lj_0_width_9) : FAILED.
    First line of code: {return test("%-09s", s_hidden);}
      expected return value : 9
      your return value     : 9
      expected output : "hi low   "
      your output     : "   hi low"
      expected (nonprintable as hex) : "hi low   "
      actual   (nonprintable as hex) : "   hi low"

Test 159 (i_prec_fits_neg) : FAILED.
    First line of code: {return test("%.6i", -3);}
      expected return value : 7
      your return value     : 6
      expected output : "-000003"
      your output     : "0000-3"
      expected (nonprintable as hex) : "-000003"
      actual   (nonprintable as hex) : "0000-3"

Test 166 (i_zp_neg_fits) : FAILED.
    First line of code: {return test("%07i", -54);}
      expected return value : 7
      your return value     : 7
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 172 (i_prec_width_fit_fit_neg) : FAILED.
    First line of code: {return test("%10.5i", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "    -00216"
      your output     : "     0-216"
      expected (nonprintable as hex) : "    -00216"
      actual   (nonprintable as hex) : "     0-216"

Test 177 (i_prec_width_fit_nofit_neg) : FAILED.
    First line of code: {return test("%3.7i", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 181 (i_prec_width_fit_fit_neg_lj) : FAILED.
    First line of code: {return test("%-10.5i", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "-00216    "
      your output     : "0-216     "
      expected (nonprintable as hex) : "-00216    "
      actual   (nonprintable as hex) : "0-216     "

Test 186 (i_prec_width_fit_nofit_neg_lj) : FAILED.
    First line of code: {return test("%-3.7i", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 189 (i_prec_width_ff_pos_zp) : FAILED.
    First line of code: {return test("%08.5i", 34);}
      expected return value : 8
      your return value     : 8
      expected output : "   00034"
      your output     : "00000034"
      expected (nonprintable as hex) : "   00034"
      actual   (nonprintable as hex) : "00000034"

Test 190 (i_prec_width_ff_neg_zp) : FAILED.
    First line of code: {return test("%010.5i", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "    -00216"
      your output     : "000000-216"
      expected (nonprintable as hex) : "    -00216"
      actual   (nonprintable as hex) : "000000-216"

Test 191 (i_prec_width_ff_zero_zp) : FAILED.
    First line of code: {return test("%08.5i", 0);}
      expected return value : 8
      your return value     : 8
      expected output : "   00000"
      your output     : "00000000"
      expected (nonprintable as hex) : "   00000"
      actual   (nonprintable as hex) : "00000000"

Test 192 (i_prec_width_nf_pos_zp) : FAILED.
    First line of code: {return test("%08.3i", 8375);}
      expected return value : 8
      your return value     : 8
      expected output : "    8375"
      your output     : "00008375"
      expected (nonprintable as hex) : "    8375"
      actual   (nonprintable as hex) : "00008375"

Test 193 (i_prec_width_nf_neg_zp) : FAILED.
    First line of code: {return test("%08.3i", -8473);}
      expected return value : 8
      your return value     : 8
      expected output : "   -8473"
      your output     : "000-8473"
      expected (nonprintable as hex) : "   -8473"
      actual   (nonprintable as hex) : "000-8473"

Test 195 (i_prec_width_fn_neg_zp) : FAILED.
    First line of code: {return test("%03.7i", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 199 (i_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.
    First line of code: {return test("%0-10.5i", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "-00216    "
      your output     : "0-216     "
      expected (nonprintable as hex) : "-00216    "
      actual   (nonprintable as hex) : "0-216     "

Test 204 (i_prec_width_fn_neg_ljzp_ignoreflag) : FAILED.
    First line of code: {return test("%0-3.7i", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 208 (i_prec0val0_basic) : FAILED.
    First line of code: {return test("%.0i", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 209 (i_prec0val0_implicit) : FAILED.
    First line of code: {return test("%.i", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 210 (i_prec0val0_w) : FAILED.
    First line of code: {return test("%5.0i", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 211 (i_prec0val0_w_impl) : FAILED.
    First line of code: {return test("%5.i", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 212 (i_prec0val0_wlj) : FAILED.
    First line of code: {return test("%-5.0i", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 213 (i_prec0val0_wlj_impl) : FAILED.
    First line of code: {return test("%-5.i", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 237 (d_prec_fits_neg) : FAILED.
    First line of code: {return test("%.6d", -3);}
      expected return value : 7
      your return value     : 6
      expected output : "-000003"
      your output     : "0000-3"
      expected (nonprintable as hex) : "-000003"
      actual   (nonprintable as hex) : "0000-3"

Test 244 (d_zp_neg_fits) : FAILED.
    First line of code: {return test("%07d", -54);}
      expected return value : 7
      your return value     : 7
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 250 (d_prec_width_fit_fit_neg) : FAILED.
    First line of code: {return test("%10.5d", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "    -00216"
      your output     : "     0-216"
      expected (nonprintable as hex) : "    -00216"
      actual   (nonprintable as hex) : "     0-216"

Test 255 (d_prec_width_fit_nofit_neg) : FAILED.
    First line of code: {return test("%3.7d", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 259 (d_prec_width_fit_fit_neg_lj) : FAILED.
    First line of code: {return test("%-10.5d", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "-00216    "
      your output     : "0-216     "
      expected (nonprintable as hex) : "-00216    "
      actual   (nonprintable as hex) : "0-216     "

Test 264 (d_prec_width_fit_nofit_neg_lj) : FAILED.
    First line of code: {return test("%-3.7d", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 267 (d_prec_width_ff_pos_zp) : FAILED.
    First line of code: {return test("%08.5d", 34);}
      expected return value : 8
      your return value     : 8
      expected output : "   00034"
      your output     : "00000034"
      expected (nonprintable as hex) : "   00034"
      actual   (nonprintable as hex) : "00000034"

Test 268 (d_prec_width_ff_neg_zp) : FAILED.
    First line of code: {return test("%010.5d", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "    -00216"
      your output     : "000000-216"
      expected (nonprintable as hex) : "    -00216"
      actual   (nonprintable as hex) : "000000-216"

Test 269 (d_prec_width_ff_zero_zp) : FAILED.
    First line of code: {return test("%08.5d", 0);}
      expected return value : 8
      your return value     : 8
      expected output : "   00000"
      your output     : "00000000"
      expected (nonprintable as hex) : "   00000"
      actual   (nonprintable as hex) : "00000000"

Test 270 (d_prec_width_nf_pos_zp) : FAILED.
    First line of code: {return test("%08.3d", 8375);}
      expected return value : 8
      your return value     : 8
      expected output : "    8375"
      your output     : "00008375"
      expected (nonprintable as hex) : "    8375"
      actual   (nonprintable as hex) : "00008375"

Test 271 (d_prec_width_nf_neg_zp) : FAILED.
    First line of code: {return test("%08.3d", -8473);}
      expected return value : 8
      your return value     : 8
      expected output : "   -8473"
      your output     : "000-8473"
      expected (nonprintable as hex) : "   -8473"
      actual   (nonprintable as hex) : "000-8473"

Test 273 (d_prec_width_fn_neg_zp) : FAILED.
    First line of code: {return test("%03.7d", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 277 (d_prec_width_ff_neg_ljzp_ignoreflag) : FAILED.
    First line of code: {return test("%0-10.5d", -216);}
      expected return value : 11
      your return value     : 11
      expected output : "-00216    "
      your output     : "0-216     "
      expected (nonprintable as hex) : "-00216    "
      actual   (nonprintable as hex) : "0-216     "

Test 282 (d_prec_width_fn_neg_ljzp_ignoreflag) : FAILED.
    First line of code: {return test("%0-3.7d", -2375);}
      expected return value : 8
      your return value     : 7
      expected output : "-0002375"
      your output     : "00-2375"
      expected (nonprintable as hex) : "-0002375"
      actual   (nonprintable as hex) : "00-2375"

Test 285 (d_prec0val0_basic) : FAILED.
    First line of code: {return test("%.0d", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 286 (d_prec0val0_implicit) : FAILED.
    First line of code: {return test("%.d", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 287 (d_prec0val0_w) : FAILED.
    First line of code: {return test("%5.0d", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 288 (d_prec0val0_w_impl) : FAILED.
    First line of code: {return test("%5.d", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 289 (d_prec0val0_wlj) : FAILED.
    First line of code: {return test("%-5.0d", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 290 (d_prec0val0_wlj_impl) : FAILED.
    First line of code: {return test("%-5.d", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 320 (u_prec_width_ff_pos_zp) : FAILED.
    First line of code: {return test("%08.5u", 34);}
      expected return value : 8
      your return value     : 8
      expected output : "   00034"
      your output     : "00000034"
      expected (nonprintable as hex) : "   00034"
      actual   (nonprintable as hex) : "00000034"

Test 321 (u_prec_width_ff_zero_zp) : FAILED.
    First line of code: {return test("%08.5u", 0);}
      expected return value : 8
      your return value     : 8
      expected output : "   00000"
      your output     : "00000000"
      expected (nonprintable as hex) : "   00000"
      actual   (nonprintable as hex) : "00000000"

Test 322 (u_prec_width_nf_pos_zp) : FAILED.
    First line of code: {return test("%08.3u", 8375);}
      expected return value : 8
      your return value     : 8
      expected output : "    8375"
      your output     : "00008375"
      expected (nonprintable as hex) : "    8375"
      actual   (nonprintable as hex) : "00008375"

Test 330 (u_prec0val0_basic) : FAILED.
    First line of code: {return test("%.0u", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 331 (u_prec0val0_implicit) : FAILED.
    First line of code: {return test("%.u", 0);}
      expected return value : 0
      your return value     : 1
      expected output : ""
      your output     : "0"
      expected (nonprintable as hex) : ""
      actual   (nonprintable as hex) : "0"

Test 332 (u_prec0val0_w) : FAILED.
    First line of code: {return test("%5.0u", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 333 (u_prec0val0_w_impl) : FAILED.
    First line of code: {return test("%5.u", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "    0"
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "    0"

Test 334 (u_prec0val0_wlj) : FAILED.
    First line of code: {return test("%-5.0u", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 335 (u_prec0val0_wlj_impl) : FAILED.
    First line of code: {return test("%-5.u", 0);}
      expected return value : 5
      your return value     : 5
      expected output : "     "
      your output     : "0    "
      expected (nonprintable as hex) : "     "
      actual   (nonprintable as hex) : "0    "

Test 337 (x_basic_zero) : FAILED.
    First line of code: {return test("this %x number", 0);}
      expected return value : 14
      your return value     : 13
      expected output : "this 0 number"
      your output     : "this  number"
      expected (nonprintable as hex) : "this 0 number"
      actual   (nonprintable as hex) : "this  number"

Test 341 (x_width_zero_fits) : FAILED.
    First line of code: {return test("%3x", 0);}
      expected return value : 3
      your return value     : 3
      expected output : "  0"
      your output     : "   "
      expected (nonprintable as hex) : "  0"
      actual   (nonprintable as hex) : "   "

Test 345 (x_width_zero_fits_lj) : FAILED.
    First line of code: {return test("%-3x", 0);}
      expected return value : 3
      your return value     : 3
      expected output : "0  "
      your output     : "   "
      expected (nonprintable as hex) : "0  "
      actual   (nonprintable as hex) : "   "

Test 365 (x_prec_width_ff_pos_zp) : FAILED.
    First line of code: {return test("%08.5x", 34);}
      expected return value : 8
      your return value     : 8
      expected output : "   00022"
      your output     : "00000022"
      expected (nonprintable as hex) : "   00022"
      actual   (nonprintable as hex) : "00000022"

Test 366 (x_prec_width_ff_zero_zp) : FAILED.
    First line of code: {return test("%08.5x", 0);}
      expected return value : 8
      your return value     : 8
      expected output : "   00000"
      your output     : "00000000"
      expected (nonprintable as hex) : "   00000"
      actual   (nonprintable as hex) : "00000000"

Test 367 (x_prec_width_nf_pos_zp) : FAILED.
    First line of code: {return test("%08.3x", 8375);}
      expected return value : 8
      your return value     : 8
      expected output : "    20b7"
      your output     : "000020b7"
      expected (nonprintable as hex) : "    20b7"
      actual   (nonprintable as hex) : "000020b7"

Test 382 (X_basic_hexu_zero) : FAILED.
    First line of code: {return test("this %X number", 0);}
      expected return value : 14
      your return value     : 13
      expected output : "this 0 number"
      your output     : "this  number"
      expected (nonprintable as hex) : "this 0 number"
      actual   (nonprintable as hex) : "this  number"

Test 386 (X_width_zero_fits) : FAILED.
    First line of code: {return test("%3X", 0);}
      expected return value : 3
      your return value     : 3
      expected output : "  0"
      your output     : "   "
      expected (nonprintable as hex) : "  0"
      actual   (nonprintable as hex) : "   "

Test 390 (X_width_zero_fits_lj) : FAILED.
    First line of code: {return test("%-3X", 0);}
      expected return value : 3
      your return value     : 3
      expected output : "0  "
      your output     : "   "
      expected (nonprintable as hex) : "0  "
      actual   (nonprintable as hex) : "   "

Test 410 (X_prec_width_ff_pos_zp) : FAILED.
    First line of code: {return test("%08.5X", 34);}
      expected return value : 8
      your return value     : 8
      expected output : "   00022"
      your output     : "00000022"
      expected (nonprintable as hex) : "   00022"
      actual   (nonprintable as hex) : "00000022"

Test 411 (X_prec_width_ff_zero_zp) : FAILED.
    First line of code: {return test("%08.5X", 0);}
      expected return value : 8
      your return value     : 8
      expected output : "   00000"
      your output     : "00000000"
      expected (nonprintable as hex) : "   00000"
      actual   (nonprintable as hex) : "00000000"

Test 412 (X_prec_width_nf_pos_zp) : FAILED.
    First line of code: {return test("%08.3X", 8375);}
      expected return value : 8
      your return value     : 8
      expected output : "    20B7"
      your output     : "000020B7"
      expected (nonprintable as hex) : "    20B7"
      actual   (nonprintable as hex) : "000020B7"

Test 426 (p_null) : FAILED.
    First line of code: {return test("%p", NULL);}
    SEGFAULT

Test 427 (p_null_width_fit) : FAILED.
    First line of code: {return test("%5p", NULL);}
    SEGFAULT

Test 428 (p_null_width_nofit) : FAILED.
    First line of code: {return test("%2p", NULL);}
    SEGFAULT

Test 429 (p_void) : FAILED.
    First line of code: {return test("%.p", NULL);}
    SEGFAULT

Test 430 (p_void_width_fit) : FAILED.
    First line of code: {return test("%5.p", NULL);}
    SEGFAULT

Test 431 (p_void_width_nofit) : FAILED.
    First line of code: {return test("%2.p", NULL);}
    SEGFAULT

Test 432 (p_ftfc_literal_9w_prec2_undefbehav) : FAILED.
    First line of code: {return test("%9.2p
", 1234);}
    SEGFAULT

Test 433 (p_ftfc_literal_2w_prec9_undefbehav) : FAILED.
    First line of code: {return test("%2.9p
", 1234);}
    SEGFAULT

Test 434 (p_ftfc_zero_prec5_undefbehav) : FAILED.
    First line of code: {return test("%.5p", 0);}
    SEGFAULT

Test 435 (p_ftfc_zero_prec0_undefbehav) : FAILED.
    First line of code: {return test("%.0p", 0);}
    SEGFAULT

Test 436 (p_ftfc_5w_throwswarning) : FAILED.
    First line of code: {return test("%5p", 0);}
    SEGFAULT

Test 437 (p_basic) : FAILED.
    First line of code: {return test("%p%p%p%p%p%p%p%p%p%p%p%p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected return value : 156
      your return value     : 0
      expected output : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      your output     : ""
      expected (nonprintable as hex) : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      actual   (nonprintable as hex) : ""

Test 438 (p_width_fit) : FAILED.
    First line of code: {return test("%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 1012
      your return value     : 1012
      expected output : "                                                           0x1006d71b8                                                           0x1006d71b9          "
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "                                                           0x1006d71b8                                                           0x1006d71b9          "
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 439 (p_width_nofit) : FAILED.
    First line of code: {return test("%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected return value : 156
      your return value     : 66
      expected output : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      your output     : "                                                            "
      expected (nonprintable as hex) : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      actual   (nonprintable as hex) : "                                                            "

Test 440 (p_width_16) : FAILED.
    First line of code: {return test("%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 222
      your return value     : 222
      expected output : "     0x1006d71b8     0x1006d71b9     0x1006d71ba     0x1006d71bc     0x1006d71c0     0x1006d71c4     0x1006d71c8     0x1006d71d0     0x1006d71d8     0"
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "     0x1006d71b8     0x1006d71b9     0x1006d71ba     0x1006d71bc     0x1006d71c0     0x1006d71c4     0x1006d71c8     0x1006d71d0     0x1006d71d8     0"
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 441 (p_width_8) : FAILED.
    First line of code: {return test("%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected return value : 156
      your return value     : 105
      expected output : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      your output     : "                                                                                                "
      expected (nonprintable as hex) : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      actual   (nonprintable as hex) : "                                                                                                "

Test 442 (p_width_32) : FAILED.
    First line of code: {return test("%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 455
      your return value     : 455
      expected output : "                     0x1006d71b8                     0x1006d71b9                     0x1006d71ba                     0x1006d71bc                     0"
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "                     0x1006d71b8                     0x1006d71b9                     0x1006d71ba                     0x1006d71bc                     0"
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 443 (p_width_fit_lj) : FAILED.
    First line of code: {return test("%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 1012
      your return value     : 1012
      expected output : "0x1006d71b8                                                           0x1006d71b9                                                           0x1006d71b"
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "0x1006d71b8                                                           0x1006d71b9                                                           0x1006d71b"
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 444 (p_width_nofit_lj) : FAILED.
    First line of code: {return test("%-5p%-5p%-5p%-5p%-5p%-5p%-5p%-5p%-5p%-5p%-5p%-5p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 156
      your return value     : 66
      expected output : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      your output     : "                                                            "
      expected (nonprintable as hex) : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      actual   (nonprintable as hex) : "                                                            "

Test 445 (p_width_16_lj) : FAILED.
    First line of code: {return test("%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 222
      your return value     : 222
      expected output : "0x1006d71b8     0x1006d71b9     0x1006d71ba     0x1006d71bc     0x1006d71c0     0x1006d71c4     0x1006d71c8     0x1006d71d0     0x1006d71d8     0x1006"
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "0x1006d71b8     0x1006d71b9     0x1006d71ba     0x1006d71bc     0x1006d71c0     0x1006d71c4     0x1006d71c8     0x1006d71d0     0x1006d71d8     0x1006"
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 446 (p_width_8_lj) : FAILED.
    First line of code: {return test("%-8p%-8p%-8p%-8p%-8p%-8p%-8p%-8p%-8p%-8p%-8p%-8p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 156
      your return value     : 105
      expected output : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      your output     : "                                                                                                "
      expected (nonprintable as hex) : "0x1006d71b80x1006d71b90x1006d71ba0x1006d71bc0x1006d71c00x1006d71c40x1006d71c80x1006d71d00x1006d71d80x1006d71e00x1006d71e80x1006d71f0"
      actual   (nonprintable as hex) : "                                                                                                "

Test 447 (p_width_32_lj) : FAILED.
    First line of code: {return test("%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 455
      your return value     : 455
      expected output : "0x1006d71b8                     0x1006d71b9                     0x1006d71ba                     0x1006d71bc                     0x1006d71c0           "
      your output     : "                                                                                                                                                      "
      expected (nonprintable as hex) : "0x1006d71b8                     0x1006d71b9                     0x1006d71ba                     0x1006d71bc                     0x1006d71c0           "
      actual   (nonprintable as hex) : "                                                                                                                                                      "

Test 465 (mix_successive_20) : FAILED.
    First line of code: {return ( test("%p", &mx_i) + test("%s", mx_s));}
      expected return value : 26
      your return value     : 15
      expected output : "0x1006d3fe4Hello, World!"
      your output     : "*Hello, World!"
      expected (nonprintable as hex) : "0x1006d3fe4Hello, World!"
      actual   (nonprintable as hex) : "*Hello, World!"

Test 477 (mix_successive_61) : FAILED.
    First line of code: {return ( test("%p", &mx_i) + test("%c", mx_c));}
      expected return value : 13
      your return value     : 2
      expected output : "0x1006d3fe4G"
      your output     : "*G"
      expected (nonprintable as hex) : "0x1006d3fe4G"
      actual   (nonprintable as hex) : "*G"

Test 492 (nocrash_noarg_16_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%p"); }
    SEGFAULT

Test 500 (nocrash_nullarg_1) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%1$s", NULL); }
    SEGFAULT

Test 501 (nocrash_nullarg_2) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%0s", NULL); }
    SEGFAULT

Test 502 (nocrash_nullarg_3) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("% s", NULL); }
    SEGFAULT

Test 503 (nocrash_nullarg_4) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%#s", NULL); }
    SEGFAULT

Test 504 (nocrash_nullarg_5) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-s", NULL); }
    SEGFAULT

Test 505 (nocrash_nullarg_6) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%+s", NULL); }
    SEGFAULT

Test 506 (nocrash_nullarg_9) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%23s", NULL); }
    SEGFAULT

Test 507 (nocrash_nullarg_10) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%.s", NULL); }
    SEGFAULT

Test 513 (nocrash_nullarg_16) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%p", NULL); }
    SEGFAULT

Test 520 (nocrash_nullarg_23) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%s", NULL); }
    SEGFAULT

Test 526 (nocrash_mandatory_wformat_undefbehav_04) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%021s", NULL);}
    SEGFAULT

Test 527 (nocrash_mandatory_wformat_undefbehav_05) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%02s", NULL);}
    SEGFAULT

Test 528 (nocrash_mandatory_wformat_undefbehav_06) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-021s", NULL);}
    SEGFAULT

Test 529 (nocrash_mandatory_wformat_undefbehav_07) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-03s", NULL);}
    SEGFAULT

Test 627 (moul_s_4) : FAILED.
    First line of code: {char *str = NULL; return test("%s!", str);}
    SEGFAULT

Test 641 (moul_mix_1) : FAILED.
    First line of code: {int r00 = 0; return test("Lalalala, %d%% des gens qui parlent à Ly adorent %s. Ou Presque. %p", 100, "Ly", &r00);}
      expected return value : 88
      your return value     : 72
      expected output : "Lalalala, 100% des gens qui parlent à Ly adorent Ly. Ou Presque. 0x7ffeef5636ac"
      your output     : "Lalalala, 100% des gens qui parlent à Ly adorent Ly. Ou Presque. "
      expected (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffeef5636ac"
      actual   (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. "

Test 698 (moul_x_4) : FAILED.
    First line of code: {return test("%x", -0);}
      expected return value : 1
      your return value     : 0
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 699 (moul_x_5) : FAILED.
    First line of code: {return test("%x", 0);}
      expected return value : 1
      your return value     : 0
      expected output : "0"
      your output     : ""
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : ""

Test 709 (moul_prec_4) : FAILED.
    First line of code: {return test("%%04.3i 42 == |%04.3i|
", 42);}
      expected return value : 22
      your return value     : 22
      expected output : "%04.3i 42 == | 042|
"
      your output     : "%04.3i 42 == |0042|
"
      expected (nonprintable as hex) : "%04.3i 42 == | 042|\x0a"
      actual   (nonprintable as hex) : "%04.3i 42 == |0042|\x0a"

Test 710 (moul_prec_5) : FAILED.
    First line of code: {return test("%%04.2i 42 == |%04.2i|
", 42);}
      expected return value : 22
      your return value     : 22
      expected output : "%04.2i 42 == |  42|
"
      your output     : "%04.2i 42 == |0042|
"
      expected (nonprintable as hex) : "%04.2i 42 == |  42|\x0a"
      actual   (nonprintable as hex) : "%04.2i 42 == |0042|\x0a"

Test 734 (new2019_star_9) : FAILED.
    First line of code: {return test("%.*i", 6, -3);}
      expected return value : 7
      your return value     : 6
      expected output : "-000003"
      your output     : "0000-3"
      expected (nonprintable as hex) : "-000003"
      actual   (nonprintable as hex) : "0000-3"

Test 735 (new2019_star_10) : FAILED.
    First line of code: {return test("%0*i", 7, -54);}
      expected return value : 7
      your return value     : 7
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 736 (new2019_negstar_1) : FAILED.
    First line of code: {return test("%*s", -32, "abc");}
      expected return value : 35
      your return value     : 3
      expected output : "abc                             "
      your output     : "abc"
      expected (nonprintable as hex) : "abc                             "
      actual   (nonprintable as hex) : "abc"

Test 737 (new2019_negstar_2) : FAILED.
    First line of code: {return test("%-*s", -32, "abc");}
      expected return value : 35
      your return value     : 3
      expected output : "abc                             "
      your output     : "abc"
      expected (nonprintable as hex) : "abc                             "
      actual   (nonprintable as hex) : "abc"

Test 739 (new2019_negstar_4) : FAILED.
    First line of code: {return test("%.*s", -3, "hello");}
      expected return value : 5
      your return value     : 1
      expected output : "hello"
      your output     : "h"
      expected (nonprintable as hex) : "hello"
      actual   (nonprintable as hex) : "h"

Test 740 (new2019_negstar_5) : FAILED.
    First line of code: {return test("%-*.*s", -7, -3, "yolo");}
      expected return value : 7
      your return value     : 1
      expected output : "yolo   "
      your output     : "y"
      expected (nonprintable as hex) : "yolo   "
      actual   (nonprintable as hex) : "y"

Test 742 (new2019_negstar_7) : FAILED.
    First line of code: {return test("%*i", -14, 94827);}
      expected return value : 15
      your return value     : 5
      expected output : "94827         "
      your output     : "94827"
      expected (nonprintable as hex) : "94827         "
      actual   (nonprintable as hex) : "94827"

Test 744 (new2019_negstar_9) : FAILED.
    First line of code: {return test("%0*i", -7, -54);}
      expected return value : 7
      your return value     : 3
      expected output : "-54    "
      your output     : "-54"
      expected (nonprintable as hex) : "-54    "
      actual   (nonprintable as hex) : "-54"

